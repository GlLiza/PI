//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace laba11WebForm.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.XXXServiceSoap")]
    public interface XXXServiceSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sum", ReplyAction="*")]
        int Sum(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sum", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SumAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sub", ReplyAction="*")]
        int Sub(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Sub", ReplyAction="*")]
        System.Threading.Tasks.Task<int> SubAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Mul", ReplyAction="*")]
        int Mul(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Mul", ReplyAction="*")]
        System.Threading.Tasks.Task<int> MulAsync(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetI", ReplyAction="*")]
        void SetI(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/SetI", ReplyAction="*")]
        System.Threading.Tasks.Task SetIAsync(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetI", ReplyAction="*")]
        int GetI();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetI", ReplyAction="*")]
        System.Threading.Tasks.Task<int> GetIAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddI", ReplyAction="*")]
        int AddI(int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddI", ReplyAction="*")]
        System.Threading.Tasks.Task<int> AddIAsync(int i);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface XXXServiceSoapChannel : laba11WebForm.ServiceReference1.XXXServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XXXServiceSoapClient : System.ServiceModel.ClientBase<laba11WebForm.ServiceReference1.XXXServiceSoap>, laba11WebForm.ServiceReference1.XXXServiceSoap {
        
        public XXXServiceSoapClient() {
        }
        
        public XXXServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XXXServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XXXServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XXXServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Sum(int x, int y) {
            return base.Channel.Sum(x, y);
        }
        
        public System.Threading.Tasks.Task<int> SumAsync(int x, int y) {
            return base.Channel.SumAsync(x, y);
        }
        
        public int Sub(int x, int y) {
            return base.Channel.Sub(x, y);
        }
        
        public System.Threading.Tasks.Task<int> SubAsync(int x, int y) {
            return base.Channel.SubAsync(x, y);
        }
        
        public int Mul(int x, int y) {
            return base.Channel.Mul(x, y);
        }
        
        public System.Threading.Tasks.Task<int> MulAsync(int x, int y) {
            return base.Channel.MulAsync(x, y);
        }
        
        public void SetI(int i) {
            base.Channel.SetI(i);
        }
        
        public System.Threading.Tasks.Task SetIAsync(int i) {
            return base.Channel.SetIAsync(i);
        }
        
        public int GetI() {
            return base.Channel.GetI();
        }
        
        public System.Threading.Tasks.Task<int> GetIAsync() {
            return base.Channel.GetIAsync();
        }
        
        public int AddI(int i) {
            return base.Channel.AddI(i);
        }
        
        public System.Threading.Tasks.Task<int> AddIAsync(int i) {
            return base.Channel.AddIAsync(i);
        }
    }
}
